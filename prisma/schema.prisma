generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String?   // <--- add this
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  messages      Message[]  @relation("UserMessages")
  userChats     UserChat[]
}


model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

// Chat system
model Chat {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  messages  Message[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userChats UserChat[]
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  sender    User     @relation("UserMessages", fields: [senderId], references: [id])
  senderId  String
  text      String
  createdAt DateTime @default(now())
}

model UserChat {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String
  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String

  @@unique([userId, chatId])
}
